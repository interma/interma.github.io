---
layout: post
title:  "learn dos2unix"
subtitle:  "学习dos2unix"
author: 刘奎恩/Kuien, Haozhou Wang
date:   2016-09-06 17:58 +0800
categories: tools
published: true
---

When we are coding with different platforms, such as IDEs on Windows, and push the source-code onto GITHUB, we may see lots of diffs about text format (for example, \r\n). 

In this case, we may two ways to solve it:

1. use `gsed` or `perl` to format, for example,

	`perl -pie 's/\n/\r\n/g' file`

2. need to use `dos2unix` in Makefiles to unify the text format.


In this post, we dig a little in `dos2unix`.

#### 1. what's `dos2unix`?

```C
/*
 *  Name: dos2unix
 *  Documentation:
 *    Remove cr ('\x0d') characters from a file.
 *
 *  The dos2unix package is distributed under FreeBSD style license.
 *  See also http://www.freebsd.org/copyright/freebsd-license.ht
 */
```

#### 2. what does `dos2unix` do?

```C
    /* CR-LF -> LF */
    /* LF    -> LF, in case the input file is a Unix text file */
    /* CR    -> CR, in dos2unix mode (don't modify Mac file) */
    /* CR    -> LF, in Mac mode */
    /* \x0a = Newline/Line Feed (LF) */
    /* \x0d = Carriage Return (CR) */
```

#### 3. Where is the source-code of `dos2unix`?

https://sourceforge.net/projects/dos2unix


#### 4. How to use `dos2unix` in Makefile?

```Makefile
format:
    @-[ -n "`command -v dos2unix`" ] && dos2unix -k -q src/*.cpp bin/gpcheckcloud/*.cpp test/*.cpp include/*.h
```

Note: here we use `command` instead of `which` is because:

http://mywiki.wooledge.org/BashFAQ/081

I copy an interesting sentence below

> The command which (which is often a csh script, although sometimes a compiled binary) is not reliable for this purpose. which may not set a useful exit code, and it may not even write errors to stderr. Therefore, in order to have a prayer of successfully using it, **one must parse its output** (wherever that output may be written).
